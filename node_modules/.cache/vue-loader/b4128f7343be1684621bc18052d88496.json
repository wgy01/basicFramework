{"remainingRequest":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\GitHub\\vue2.0-cli3.0-iview3.0\\src\\views\\home.vue?vue&type=style&index=1&lang=css&","dependencies":[{"path":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\src\\views\\home.vue","mtime":1537172629668},{"path":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534822204654},{"path":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.flex{\n\tdisplay: flex;\n}\n",{"version":3,"sources":["home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA;AACA;AACA","file":"home.vue","sourceRoot":"src\\views","sourcesContent":["<template>\r\n\t\r\n\t<div>\r\n\t\t\r\n\t\t<h1>首页</h1>\r\n\t\t\r\n\t</div>\r\n\t\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios';\r\n\r\nlet getAjaxData = () => {\r\n\t\r\n\treturn new Promise(resolve => {\r\n\r\n\t\taxios.post('接口路径', {\r\n\t\t\t\r\n\t\t})\r\n\t\t.then(response => {\r\n\t\t\tresolve(response.data);\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n\r\n\t});\r\n\r\n}\r\n\r\nexport default {\r\n\tcomponents:{//组件模板\r\n\t},\r\n\tprops:{//组件道具（参数）\r\n\t\t/* ****属性用法*****\r\n\t\t * \r\n\t\t * 传递类型 type: Array | Number | String | Object\r\n\t\t * 为必传 required: true\r\n\t\t * 默认值 default: ''\r\n\t\t * \r\n\t\t */\r\n\t},\r\n    data () {//数据\r\n        return {\r\n        \t\r\n        }\r\n    },\r\n    methods: {//方法\r\n    \t\r\n    },\r\n    computed: {//计算属性\r\n        \t\r\n    },\r\n    watch: {//监测数据变化\r\n    \t\r\n\t},\r\n    \r\n    //===================组件钩子===========================\r\n    \r\n    created () {//实例被创建完毕之后执行\r\n    \t\r\n\t},\r\n    mounted () {//模板被渲染完毕之后执行\r\n    \t\r\n    \t$ax.getAllAjaxData([\r\n    \t\t{url: 'Center/myInfo'},\r\n    \t\t{url: 'Center/companyInfoAjax'}\r\n    \t],(aaa,bbb) => {\r\n    \t\t\r\n    \t\tconsole.log(aaa);\n    \t\tconsole.log(bbb);\r\n    \t\t\r\n    \t});\r\n    \t\r\n\t},\r\n\t\r\n\t//=================组件路由勾子==============================\r\n\t\r\n\tbeforeRouteEnter (to, from, next) {//在组件创建之前调用（放置页面加载时请求的Ajax）\r\n\t\t\r\n\t\t(async() => {//执行异步函数\r\n\t\t\t\r\n\t\t\t//async、await错误处理\r\n\t\t\ttry {\r\n\t\t\t\t\r\n\t\t\t/**\r\n\t\t\t * \r\n\t\t\t * ------串行执行---------\r\n\t\t\t * console.log(await getAjaxData());\r\n\t\t\t * ...\r\n\t\t\t * \r\n\t\t\t * ---------并行：将多个promise直接发起请求（先执行async所在函数），然后再进行await操作。（执行效率高、快）----------\r\n\t\t\t * let abc = getAjaxData();//先执行promise函数\r\n\t\t\t * ...\r\n\t\t\t * console.log(await abc);\r\n\t\t\t * ...\r\n\t\t\t*/\r\n\t\t\t\t\r\n\t\t\t} catch(err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t})();\r\n\t\t\r\n\t\tnext(vm => {\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t},\r\n\t\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n\t\r\n</style>\r\n\n<style>\r\n\t.flex{\r\n\t\tdisplay: flex;\r\n\t}\r\n</style>"]}]}