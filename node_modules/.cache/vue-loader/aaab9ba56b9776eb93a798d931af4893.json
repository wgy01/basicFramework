{"remainingRequest":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\GitHub\\vue2.0-cli3.0-iview3.0\\src\\views\\main\\header\\tag-module.vue?vue&type=style&index=1&lang=css&","dependencies":[{"path":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\src\\views\\main\\header\\tag-module.vue","mtime":1536656379303},{"path":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534822204654},{"path":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n.dropdownTop .ivu-select-dropdown{\n\tmargin-top: 8px !important;\n}\n",{"version":3,"sources":["tag-module.vue"],"names":[],"mappings":";;;AAGA;AACA;AACA","file":"tag-module.vue","sourceRoot":"src\\views\\main\\header","sourcesContent":["<style scoped lang=\"less\">\r\n</style>\n<style>\r\n\t.dropdownTop .ivu-select-dropdown{\r\n\t\tmargin-top: 8px !important;\r\n\t}\r\n</style>\r\n\r\n<template>\r\n\r\n\t<div style=\"display: flex;align-items: center;background: #EBEBEB;height: 38px;line-height: 38px;\">\r\n\t\t\r\n\t\t<div style=\"flex-shrink: 0;height: 37px;width: 26px;background: #fff;display: flex;align-items: center;\">\r\n\t\t\t<Button type=\"text\" style=\"padding: 0;width: 100%;height: 28px;float: left;\">\r\n\t\t\t\t<Icon size=\"20\" type=\"ios-arrow-back\" />\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t\t\r\n\t\t<div style=\"width: 100%;overflow: hidden;\">\r\n\t\t\t\r\n\t\t\t<div style=\"white-space:nowrap;display: inline-block;padding-left: 4px;\">\r\n\t\t\t\t\r\n\t\t\t\t<Tag\r\n\t\t\t\tv-for=\"item in tagList\"\r\n\t\t\t\ttype=\"dot\"\r\n\t\t\t\t:name=\"item.name\"\r\n\t\t\t\t:closable=\"item.name === 'home' ? false : true\"\r\n\t\t\t\t:fade=\"false\"\r\n\t\t\t\t@on-close=\"tagClose(item)\"\r\n\t\t\t\t@click.native=\"tagClick(item)\"\r\n\t\t\t\t:color=\"$route.name === item.name ? 'primary' : 'default'\">\r\n\t\t\t\t\t{{item.meta.title}}\r\n\t\t\t\t</Tag>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t\t\r\n\t\t<div style=\"flex-shrink: 0;height: 37px;width: 26px;background: #fff;display: flex;align-items: center;\">\r\n\t\t\t<Button type=\"text\" style=\"padding: 0;width: 100%;height: 28px;float: right;\">\r\n\t\t\t\t<Icon size=\"20\" type=\"ios-arrow-forward\" />\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t\t\n\t\t<div style=\"flex-shrink: 0;height: 37px;width: 34px;background: #fff;margin-left: 1px;display: flex;align-items: center;\">\r\n\t\t\t<Dropdown @on-click=\"handleClose\" placement=\"bottom-end\" style=\"display: flex;\" class=\"dropdownTop\">\r\n\t\t        <div style=\"display: flex;\">\r\n\t           \t\t<Button type=\"text\" style=\"padding: 0;width: 33px;height: 28px;\">\r\n\t\t\t\t\t\t<Icon size=\"20\" type=\"ios-close-circle-outline\" />\r\n\t\t\t\t\t</Button>\r\n\t\t        </div>\r\n\t\t        <DropdownMenu slot=\"list\">\r\n\t\t            <DropdownItem name=\"other\">关闭其他</DropdownItem>\r\n\t\t            <DropdownItem name=\"all\">关闭全部</DropdownItem>\r\n\t\t        </DropdownMenu>\r\n\t\t    </Dropdown>\r\n\t\t</div>\r\n\t\t\r\n\t</div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport { objEqual } from '@/toolBox';\r\n\r\nexport default {\r\n\tcomponents: { //组件模板\r\n\t\t\r\n\t},\r\n\tprops: { //组件道具（参数）\r\n\t\t\r\n\t\ttagList: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => []\r\n\t\t},\r\n\t\t\r\n\t},\r\n\tdata() { //数据\r\n\t\treturn {\r\n\t\t\t\r\n\t\t}\r\n\t},\r\n\tmethods: { //方法\r\n\t\t\r\n\t\ttagClose(current){//关闭当前标签\r\n\t\t\t\r\n\t\t\tlet currentTag = current;\r\n\t\t\t\r\n\t\t\tlet tagList = this.$store.state.app.tagNavList;\r\n\t\t\t\r\n\t\t\ttagList.forEach((item,index,rawArr) => {\r\n\t\t\t\t\r\n\t\t\t\tif(item.name === currentTag.name){\r\n\t\t\t\t\t\r\n\t\t\t\t\trawArr.splice(index,1);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(item.name === this.$route.name){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(rawArr[index]){\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.$router.push({\r\n\t\t\t\t\t    \t\tname: rawArr[index].name\r\n\t\t\t\t\t    \t});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.$router.push({\r\n\t\t\t\t\t    \t\tname: rawArr[index-1].name\r\n\t\t\t\t\t    \t});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.$store.commit('setTagNavList',tagList);\r\n\t\t\t\r\n\t    },\r\n\t    \r\n\t    tagClick(current){//点击当前标签\r\n\t    \t\r\n\t    \tthis.$router.push({\r\n\t    \t\tname: current.name\r\n\t    \t});\r\n\t    \t\r\n\t    },\r\n\t    \r\n\t    handleClose(name){\r\n\t    \t\r\n\t    \tlet newTag = () => {\r\n\t    \t\t\r\n\t    \t\tlet tagList = this.$store.state.app.tagNavList;\r\n\t    \t\t\r\n\t    \t\tlet homeRoute = this.$store.state.app.homeRoute;\r\n\t    \t\t\r\n\t    \t\tlet res = [];\r\n\t    \t\r\n\t    \t\tif(name === 'other'){\r\n\t    \t\t\r\n\t    \t\t\tres = tagList.filter(item => {\r\n\t    \t\t\t\tif((item.name === homeRoute.name) || (item.name === this.$route.name) ) return item\r\n\t    \t\t\t});\r\n\t    \t\t\r\n\t    \t\t\treturn res;\r\n\t    \t\t\r\n\t    \t\t}else if(name === 'all'){\r\n\t    \t\t\r\n\t    \t\t\tres = tagList.filter(item => {\r\n\t    \t\t\t\tif(item.name === homeRoute.name) return item\r\n\t    \t\t\t});\r\n\t    \t\t\t\r\n\t    \t\t\tthis.$router.push({\r\n\t\t\t    \t\tname: homeRoute.name\r\n\t\t\t    \t});\r\n\t    \t\t\t\r\n\t    \t\t\treturn res;\r\n\t    \t\t\r\n\t    \t\t}\r\n\t    \t\t\r\n\t    \t}\r\n\t    \t\r\n\t    \tthis.$store.commit('setTagNavList',newTag());\r\n\t    \t\r\n\t    },\r\n\t\t\r\n\t},\r\n\tcomputed: { //计算属性\r\n\t\t\r\n\t},\r\n\twatch: { //监测数据变化\r\n\t\t\r\n\t},\r\n\r\n\t//===================组件钩子===========================\r\n\r\n\tcreated() { //实例被创建完毕之后执行\r\n\r\n\t},\r\n\tmounted() { //模板被渲染完毕之后执行\r\n\t\t\r\n\t},\r\n\r\n}\r\n</script>"]}]}