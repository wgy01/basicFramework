{"remainingRequest":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\node_modules\\babel-loader\\lib\\index.js!E:\\GitHub\\vue2.0-cli3.0-iview3.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\GitHub\\vue2.0-cli3.0-iview3.0\\src\\views\\home.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\src\\views\\home.vue","mtime":1540957228929},{"path":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534822204654},{"path":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"E:\\GitHub\\vue2.0-cli3.0-iview3.0\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:\\\\GitHub\\\\vue2.0-cli3.0-iview3.0\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  components: {//组件模板\n  },\n  props: {//组件道具（参数）\n\n    /* ****属性用法*****\r\n     * \r\n     * 传递类型 type: Array | Number | String | Object\r\n     * 为必传 required: true\r\n     * 默认值 default: ''\r\n     * \r\n     */\n  },\n  data: function data() {\n    //数据\n    return {\n      value2: [],\n      data: [{\n        value: 'beijing',\n        label: '北京',\n        children: [{\n          value: 'gugong',\n          label: '故宫'\n        }, {\n          value: 'tiantan',\n          label: '天坛'\n        }, {\n          value: 'wangfujing',\n          label: '王府井'\n        }]\n      }, {\n        value: 'jiangsu',\n        label: '江苏',\n        children: [{\n          value: 'nanjing',\n          label: '南京',\n          children: [{\n            value: 'fuzimiao',\n            label: '夫子庙'\n          }]\n        }, {\n          value: 'suzhou',\n          label: '苏州',\n          children: [{\n            value: 'zhuozhengyuan',\n            label: '拙政园'\n          }, {\n            value: 'shizilin',\n            label: '狮子林'\n          }]\n        }]\n      }]\n    };\n  },\n  methods: {\n    //方法\n    change: function change(val) {\n      console.log(val);\n    }\n  },\n  computed: {//计算属性\n  },\n  watch: {//监测数据变化\n  },\n  //===================组件钩子===========================\n  created: function created() {//实例被创建完毕之后执行\n  },\n  mounted: function mounted() {//模板被渲染完毕之后执行\n  },\n  //=================组件路由勾子==============================\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    //在组件创建之前调用（放置页面加载时请求的Ajax）\n    _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //执行异步函数\n              //async、await错误处理\n              try {\n                /**\r\n                 * \r\n                 * ------串行执行---------\r\n                 * console.log(await getAjaxData());\r\n                 * ...\r\n                 * \r\n                 * ---------并行：将多个promise直接发起请求（先执行async所在函数），然后再进行await操作。（执行效率高、快）----------\r\n                 * let abc = getAjaxData();//先执行promise函数\r\n                 * ...\r\n                 * console.log(await abc);\r\n                 * ...\r\n                */\n                next(function (vm) {});\n              } catch (err) {\n                console.log(err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }))();\n  }\n};",{"version":3,"sources":["home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAcA,eAAA;AACA,cAAA,CAAA;AAAA,GADA;AAGA,SAAA,CAAA;;AACA;;;;;;;AADA,GAHA;AAYA,MAZA,kBAYA;AAAA;AACA,WAAA;AAEA,cAAA,EAFA;AAGA,YAAA,CAAA;AACA,eAAA,SADA;AAEA,eAAA,IAFA;AAGA,kBAAA,CACA;AACA,iBAAA,QADA;AAEA,iBAAA;AAFA,SADA,EAKA;AACA,iBAAA,SADA;AAEA,iBAAA;AAFA,SALA,EASA;AACA,iBAAA,YADA;AAEA,iBAAA;AAFA,SATA;AAHA,OAAA,EAiBA;AACA,eAAA,SADA;AAEA,eAAA,IAFA;AAGA,kBAAA,CACA;AACA,iBAAA,SADA;AAEA,iBAAA,IAFA;AAGA,oBAAA,CACA;AACA,mBAAA,UADA;AAEA,mBAAA;AAFA,WADA;AAHA,SADA,EAWA;AACA,iBAAA,QADA;AAEA,iBAAA,IAFA;AAGA,oBAAA,CACA;AACA,mBAAA,eADA;AAEA,mBAAA;AAFA,WADA,EAKA;AACA,mBAAA,UADA;AAEA,mBAAA;AAFA,WALA;AAHA,SAXA;AAHA,OAjBA;AAHA,KAAA;AAoDA,GAjEA;AAkEA,WAAA;AAAA;AAEA,UAFA,kBAEA,GAFA,EAEA;AACA,cAAA,GAAA,CAAA,GAAA;AACA;AAJA,GAlEA;AAyEA,YAAA,CAAA;AAAA,GAzEA;AA4EA,SAAA,CAAA;AAAA,GA5EA;AAgFA;AAEA,SAlFA,qBAkFA,CAAA;AAEA,GApFA;AAqFA,SArFA,qBAqFA,CAAA;AAEA,GAvFA;AAyFA;AAEA,kBA3FA,4BA2FA,EA3FA,EA2FA,IA3FA,EA2FA,IA3FA,EA2FA;AAAA;AAEA;AAAA;AAAA,4BAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA,kBAAA;AAEA;;;;;;;;;;;;AAYA,qBAAA,cAAA,CAEA,CAFA;AAIA,eAlBA,CAkBA,OAAA,GAAA,EAAA;AACA,wBAAA,GAAA,CAAA,GAAA;AACA;;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAA;AA2BA;AAxHA,CAAA","sourcesContent":["<template>\r\n\t\r\n\t<div>\r\n\t\t\r\n\t\t<h1>首页</h1>\r\n\t\t\r\n\t\t{{value2}}\r\n\t\t<Cascader v-model=\"value2\" :data=\"data\" @on-change=\"change\" change-on-select></Cascader>\r\n\t\t\r\n\t</div>\r\n\t\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\tcomponents:{//组件模板\r\n\t},\r\n\tprops:{//组件道具（参数）\r\n\t\t/* ****属性用法*****\r\n\t\t * \r\n\t\t * 传递类型 type: Array | Number | String | Object\r\n\t\t * 为必传 required: true\r\n\t\t * 默认值 default: ''\r\n\t\t * \r\n\t\t */\r\n\t},\r\n    data () {//数据\r\n        return {\r\n        \t\r\n        \tvalue2: [],\r\n\t\t\tdata: [{\r\n\t            value: 'beijing',\r\n\t            label: '北京',\r\n\t            children: [\r\n\t                {\r\n\t                    value: 'gugong',\r\n\t                    label: '故宫'\r\n\t                },\r\n\t                {\r\n\t                    value: 'tiantan',\r\n\t                    label: '天坛'\r\n\t                },\r\n\t                {\r\n\t                    value: 'wangfujing',\r\n\t                    label: '王府井'\r\n\t                }\r\n\t            ]\r\n\t        }, {\r\n\t            value: 'jiangsu',\r\n\t            label: '江苏',\r\n\t            children: [\r\n\t                {\r\n\t                    value: 'nanjing',\r\n\t                    label: '南京',\r\n\t                    children: [\r\n\t                        {\r\n\t                            value: 'fuzimiao',\r\n\t                            label: '夫子庙',\r\n\t                        }\r\n\t                    ]\r\n\t                },\r\n\t                {\r\n\t                    value: 'suzhou',\r\n\t                    label: '苏州',\r\n\t                    children: [\r\n\t                        {\r\n\t                            value: 'zhuozhengyuan',\r\n\t                            label: '拙政园',\r\n\t                        },\r\n\t                        {\r\n\t                            value: 'shizilin',\r\n\t                            label: '狮子林',\r\n\t                        }\r\n\t                    ]\r\n\t                }\r\n\t            ],\r\n\t        }]\r\n        \t\r\n        }\r\n    },\r\n    methods: {//方法\r\n    \t\r\n    \tchange(val){\r\n    \t\tconsole.log(val);\r\n    \t}\r\n    \t\r\n    },\r\n    computed: {//计算属性\r\n        \t\r\n    },\r\n    watch: {//监测数据变化\r\n    \t\r\n\t},\r\n    \r\n    //===================组件钩子===========================\r\n    \r\n    created () {//实例被创建完毕之后执行\r\n    \t\r\n\t},\r\n    mounted () {//模板被渲染完毕之后执行\r\n    \t\r\n\t},\r\n\t\r\n\t//=================组件路由勾子==============================\r\n\t\r\n\tbeforeRouteEnter (to, from, next) {//在组件创建之前调用（放置页面加载时请求的Ajax）\r\n\t\t\r\n\t\t(async() => {//执行异步函数\r\n\t\t\t\r\n\t\t\t//async、await错误处理\r\n\t\t\ttry {\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t * \r\n\t\t\t\t * ------串行执行---------\r\n\t\t\t\t * console.log(await getAjaxData());\r\n\t\t\t\t * ...\r\n\t\t\t\t * \r\n\t\t\t\t * ---------并行：将多个promise直接发起请求（先执行async所在函数），然后再进行await操作。（执行效率高、快）----------\r\n\t\t\t\t * let abc = getAjaxData();//先执行promise函数\r\n\t\t\t\t * ...\r\n\t\t\t\t * console.log(await abc);\r\n\t\t\t\t * ...\r\n\t\t\t\t*/\r\n\t\t\t\tnext(vm => {\r\n\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t} catch(err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t})();\r\n\t\t\r\n\t},\r\n\t\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n</style>"],"sourceRoot":"src\\views"}]}