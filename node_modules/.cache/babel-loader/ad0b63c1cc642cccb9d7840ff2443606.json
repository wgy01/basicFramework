{"remainingRequest":"E:\\GitHub\\roomSystem\\node_modules\\babel-loader\\lib\\index.js!E:\\GitHub\\roomSystem\\src\\views\\main\\store\\index.js","dependencies":[{"path":"E:\\GitHub\\roomSystem\\src\\views\\main\\store\\index.js","mtime":1542091434445},{"path":"E:\\GitHub\\roomSystem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534822204654},{"path":"E:\\GitHub\\roomSystem\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"E:\\\\GitHub\\\\roomSystem\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/toConsumableArray\";\nimport routers from '@/router/router.js'; //调用路由表\n\nimport { getMenuByRouter, setBreadcrumb, getHomeRoute, setTagNavListInLocalstorage, getTagNavListFromLocalstorage, routeHasExist } from '@/toolBox'; //调用工具\n\nvar mainFrame = {\n  state: {\n    //数据\n    menuList: [],\n    //菜单列表\n    menuChildrenList: [],\n    tagNavList: [],\n    //tag标签列表\n    homeRoute: getHomeRoute(routers),\n    //name属性等于home路由数据\n    breadCrumbList: [] //面包屑导航列表\n\n  },\n  mutations: {\n    //事件集,mutation是同步的\n    getMenuList: function getMenuList(state) {\n      //获取菜单列表\n      state.menuList = getMenuByRouter(routers, window.USE_RACCESS);\n    },\n    setBreadCrumb: function setBreadCrumb(state, routeMatched) {\n      //设置面包屑导航\n      state.breadCrumbList = setBreadcrumb(routeMatched, state.homeRoute);\n    },\n    setTagNavList: function setTagNavList(state, list) {\n      //设置tag标签导航\n      if (list) {\n        state.tagNavList = _toConsumableArray(list);\n        setTagNavListInLocalstorage(_toConsumableArray(list));\n      } else {\n        state.tagNavList = getTagNavListFromLocalstorage();\n      }\n    },\n    addTag: function addTag(state, _ref) {\n      var route = _ref.route,\n          _ref$type = _ref.type,\n          type = _ref$type === void 0 ? 'unshift' : _ref$type;\n\n      //添加默认的tag标签\n      if (!routeHasExist(state.tagNavList, route)) {\n        if (type === 'push') {\n          state.tagNavList.push(route);\n        } else {\n          if (route.name === 'home') {\n            state.tagNavList.unshift(route);\n          } else {\n            state.tagNavList.splice(1, 0, route);\n          }\n        }\n\n        setTagNavListInLocalstorage(_toConsumableArray(state.tagNavList));\n      }\n    }\n  },\n  getters: {//计算属性\n    //menuList: (state, getters) => getMenuByRouter(routers, window.USE_RACCESS),//获取菜单列表\n  },\n  actions: {//专门放置异步交互代码,Action 是异步的\n  },\n  modules: {//模板\n  }\n};\nexport default mainFrame;",{"version":3,"sources":["src\\views\\main\\store\\index.js"],"names":["routers","getMenuByRouter","setBreadcrumb","getHomeRoute","setTagNavListInLocalstorage","getTagNavListFromLocalstorage","routeHasExist","mainFrame","state","menuList","menuChildrenList","tagNavList","homeRoute","breadCrumbList","mutations","getMenuList","window","USE_RACCESS","setBreadCrumb","routeMatched","setTagNavList","list","addTag","route","type","push","name","unshift","splice","getters","actions","modules"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,oBAApB,C,CAA0C;;AAC1C,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,YAAzC,EAAuDC,2BAAvD,EAAoFC,6BAApF,EAAmHC,aAAnH,QAAwI,WAAxI,C,CAAqJ;;AAErJ,IAAMC,YAAY;AAEjBC,SAAO;AAAC;AAEPC,cAAU,EAFJ;AAEO;AAEbC,sBAAkB,EAJZ;AAMNC,gBAAY,EANN;AAMS;AAEfC,eAAWT,aAAaH,OAAb,CARL;AAQ2B;AAEjCa,oBAAgB,EAVV,CAUa;;AAVb,GAFU;AAgBjBC,aAAW;AAAE;AAEZC,eAFU,uBAEEP,KAFF,EAEQ;AAAC;AAClBA,YAAMC,QAAN,GAAiBR,gBAAgBD,OAAhB,EAAyBgB,OAAOC,WAAhC,CAAjB;AACA,KAJS;AAMVC,iBANU,yBAMKV,KANL,EAMYW,YANZ,EAM0B;AAAC;AAEjCX,YAAMK,cAAN,GAAuBX,cAAciB,YAAd,EAA4BX,MAAMI,SAAlC,CAAvB;AAEA,KAVM;AAYPQ,iBAZO,yBAYOZ,KAZP,EAYca,IAZd,EAYoB;AAAC;AAE9B,UAAGA,IAAH,EAAS;AAERb,cAAMG,UAAN,sBAAuBU,IAAvB;AAEAjB,uDAAgCiB,IAAhC;AAEA,OAND,MAMK;AAEJb,cAAMG,UAAN,GAAmBN,+BAAnB;AAEA;AAED,KA1BS;AA4BViB,UA5BU,kBA4BHd,KA5BG,QA4B6B;AAAA,UAAxBe,KAAwB,QAAxBA,KAAwB;AAAA,2BAAlBC,IAAkB;AAAA,UAAlBA,IAAkB,0BAAX,SAAW;;AAAC;AAEvC,UAAG,CAAClB,cAAcE,MAAMG,UAApB,EAAgCY,KAAhC,CAAJ,EAA4C;AAE3C,YAAGC,SAAS,MAAZ,EAAoB;AAEnBhB,gBAAMG,UAAN,CAAiBc,IAAjB,CAAsBF,KAAtB;AAEA,SAJD,MAIM;AAEL,cAAGA,MAAMG,IAAN,KAAe,MAAlB,EAAyB;AAExBlB,kBAAMG,UAAN,CAAiBgB,OAAjB,CAAyBJ,KAAzB;AAEA,WAJD,MAIK;AAEJf,kBAAMG,UAAN,CAAiBiB,MAAjB,CAAwB,CAAxB,EAA2B,CAA3B,EAA8BL,KAA9B;AAEA;AAED;;AAEDnB,uDAAgCI,MAAMG,UAAtC;AAEA;AAED;AAtDS,GAhBM;AA0EjBkB,WAAS,CAAC;AAET;AAFQ,GA1EQ;AAgFjBC,WAAS,CAAC;AAAD,GAhFQ;AAoFjBC,WAAS,CAAC;AAAD;AApFQ,CAAlB;AA0FA,eAAexB,SAAf","sourceRoot":"E:\\GitHub\\roomSystem","sourcesContent":["import routers from '@/router/router.js'; //调用路由表\r\nimport { getMenuByRouter, setBreadcrumb, getHomeRoute, setTagNavListInLocalstorage, getTagNavListFromLocalstorage, routeHasExist } from '@/toolBox'; //调用工具\r\n\r\nconst mainFrame = {\r\n\t\r\n\tstate: {//数据\r\n\t\t\r\n\t\tmenuList: [],//菜单列表\r\n\t\t\r\n\t\tmenuChildrenList: [],\r\n\t\t\r\n\t\ttagNavList: [],//tag标签列表\r\n\t\t\r\n\t\thomeRoute: getHomeRoute(routers),//name属性等于home路由数据\r\n\t\t\r\n\t\tbreadCrumbList: [],//面包屑导航列表\r\n\t\t\r\n\t},\r\n\t\r\n\tmutations: { //事件集,mutation是同步的\r\n\t\t\r\n\t\tgetMenuList(state){//获取菜单列表\r\n\t\t\tstate.menuList = getMenuByRouter(routers, window.USE_RACCESS);\r\n\t\t},\r\n\t\t\r\n\t\tsetBreadCrumb (state, routeMatched) {//设置面包屑导航\r\n\t\t\t\r\n\t    \tstate.breadCrumbList = setBreadcrumb(routeMatched, state.homeRoute);\r\n\t    \t\r\n\t    },\r\n\t    \r\n\t    setTagNavList(state, list) {//设置tag标签导航\r\n\t    \t\r\n\t\t\tif(list) {\r\n\t\t\t\t\r\n\t\t\t\tstate.tagNavList = [...list];\r\n\t\t\t\t\r\n\t\t\t\tsetTagNavListInLocalstorage([...list]);\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\t\r\n\t\t\t\tstate.tagNavList = getTagNavListFromLocalstorage();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\taddTag(state, {route,type = 'unshift'}){//添加默认的tag标签\r\n\t\t\t\r\n\t\t\tif(!routeHasExist(state.tagNavList, route)) {\r\n\t\t\t\t\r\n\t\t\t\tif(type === 'push') {\r\n\t\t\t\t\t\r\n\t\t\t\t\tstate.tagNavList.push(route);\r\n\t\t\t\t\t\r\n\t\t\t\t}else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(route.name === 'home'){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstate.tagNavList.unshift(route);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstate.tagNavList.splice(1, 0, route);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tsetTagNavListInLocalstorage([...state.tagNavList]);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t},\r\n\t\r\n\tgetters: {//计算属性\r\n\t\t\r\n\t\t//menuList: (state, getters) => getMenuByRouter(routers, window.USE_RACCESS),//获取菜单列表\r\n\t\t\r\n\t},\r\n\t\r\n\tactions: {//专门放置异步交互代码,Action 是异步的\r\n\t\t\r\n\t},\r\n\t\r\n\tmodules: {//模板\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\nexport default mainFrame;\r\n"]}]}