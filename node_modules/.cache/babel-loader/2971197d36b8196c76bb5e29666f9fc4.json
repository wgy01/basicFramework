{"remainingRequest":"E:\\MyProject\\vue-cli3.0\\node_modules\\babel-loader\\lib\\index.js!E:\\MyProject\\vue-cli3.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\MyProject\\vue-cli3.0\\src\\views\\main\\menu\\menu-module.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\MyProject\\vue-cli3.0\\src\\views\\main\\menu\\menu-module.vue","mtime":1534833831834},{"path":"E:\\MyProject\\vue-cli3.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534822204654},{"path":"E:\\MyProject\\vue-cli3.0\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"E:\\MyProject\\vue-cli3.0\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:\\\\MyProject\\\\vue-cli3.0\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\n\nvar getAjaxData = function getAjaxData() {\n  return new Promise(function (resolve) {\n    axios.post('接口路径', {}).then(function (response) {\n      resolve(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  });\n};\n\nexport default {\n  components: {//组件模板\n  },\n  props: {//组件道具（参数）\n\n    /* ****属性用法*****\n     * \n     * 传递类型 type: Array | Number | String | Object\n     * 为必传 required: true\n     * 默认值 default: ''\n     * \n     */\n  },\n  data: function data() {\n    //数据\n    return {};\n  },\n  methods: {//方法\n  },\n  computed: {\n    //计算属性\n    menuitemClasses: function menuitemClasses() {\n      return ['menu-item', this.isCollapsed ? 'collapsed-menu' : ''];\n    }\n  },\n  watch: {//监测数据变化\n  },\n  //===================组件钩子===========================\n  created: function created() {//实例被创建完毕之后执行\n  },\n  mounted: function mounted() {//模板被渲染完毕之后执行\n  },\n  //=================组件路由勾子==============================\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    //在组件创建之前调用（放置页面加载时请求的Ajax）\n    _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //执行异步函数\n              //async、await错误处理\n              try {\n                /*\n                 * \n                 * ------串行执行---------\n                 * console.log(await getAjaxData());\n                 * ...\n                 * \n                 * ---------并行：将多个promise直接发起请求（先执行async所在函数），然后再进行await操作。（执行效率高、快）----------\n                 * let abc = getAjaxData();//先执行promise函数\n                 * ...\n                 * console.log(await abc);\n                 * ...\n                 */\n              } catch (err) {\n                console.log(err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }))();\n\n    next(function (vm) {});\n  }\n};",{"version":3,"sources":["menu-module.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA,OAAA,KAAA,MAAA,OAAA;;AAEA,IAAA,cAAA,SAAA,WAAA,GAAA;AAEA,SAAA,IAAA,OAAA,CAAA,mBAAA;AAEA,UAAA,IAAA,CAAA,MAAA,EAAA,EAAA,EAGA,IAHA,CAGA,oBAAA;AACA,cAAA,SAAA,IAAA;AACA,KALA,EAMA,KANA,CAMA,UAAA,KAAA,EAAA;AACA,cAAA,GAAA,CAAA,KAAA;AACA,KARA;AAUA,GAZA,CAAA;AAcA,CAhBA;;AAkBA,eAAA;AACA,cAAA,CAAA;AAAA,GADA;AAGA,SAAA,CAAA;;AACA;;;;;;;AADA,GAHA;AAYA,MAZA,kBAYA;AAAA;AACA,WAAA,EAAA;AAGA,GAhBA;AAiBA,WAAA,CAAA;AAAA,GAjBA;AAoBA,YAAA;AAAA;AAEA,mBAFA,6BAEA;AACA,aAAA,CACA,WADA,EAEA,KAAA,WAAA,GAAA,gBAAA,GAAA,EAFA,CAAA;AAIA;AAPA,GApBA;AA8BA,SAAA,CAAA;AAAA,GA9BA;AAkCA;AAEA,SApCA,qBAoCA,CAAA;AAEA,GAtCA;AAuCA,SAvCA,qBAuCA,CAAA;AAEA,GAzCA;AA2CA;AAEA,kBA7CA,4BA6CA,EA7CA,EA6CA,IA7CA,EA6CA,IA7CA,EA6CA;AAAA;AAEA;AAAA;AAAA,4BAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA,kBAAA;AAEA;;;;;;;;;;;;AAaA,eAfA,CAeA,OAAA,GAAA,EAAA;AACA,wBAAA,GAAA,CAAA,GAAA;AACA;;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAA;;AAwBA,SAAA,cAAA,CAEA,CAFA;AAIA;AA3EA,CAAA","sourcesContent":["<style scoped lang=\"less\">\r\n\t.collapsed-menu span {\r\n\t\twidth: 0px;\r\n\t\ttransition: width .2s ease;\r\n\t}\r\n\t\r\n\t.collapsed-menu i {\r\n\t\ttransform: translateX(5px);\r\n\t\ttransition: font-size .2s ease .2s, transform .2s ease .2s;\r\n\t\tvertical-align: middle;\r\n\t\tfont-size: 22px;\r\n\t}\r\n\t.menu-item span{\r\n        display: inline-block;\r\n        overflow: hidden;\r\n        width: 69px;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        vertical-align: bottom;\r\n        transition: width .2s ease .2s;\r\n    }\r\n    .menu-item i{\r\n        transform: translateX(0px);\r\n        transition: font-size .2s ease, transform .2s ease;\r\n        vertical-align: middle;\r\n        font-size: 16px;\r\n    }\r\n</style>\r\n\r\n<template>\r\n\r\n\t\t<div>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<Menu active-name=\"1-2\" theme=\"dark\" width=\"auto\" :class=\"menuitemClasses\">\r\n\t\t\t\t<MenuItem name=\"1-1\">\r\n\t\t\t\t<Icon type=\"ios-navigate\"></Icon>\r\n\t\t\t\t<span>Option 1</span>\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t<MenuItem name=\"1-2\">\r\n\t\t\t\t<Icon type=\"ios-search\"></Icon>\r\n\t\t\t\t<span>Option 2</span>\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t<MenuItem name=\"1-3\">\r\n\t\t\t\t<Icon type=\"ios-settings\"></Icon>\r\n\t\t\t\t<span>Option 3</span>\r\n\t\t\t\t</MenuItem>\r\n\t\t\t</Menu>\r\n\t\t\t\r\n\t\t\t\r\n\t\t</div>\r\n\r\n\t\t\t\r\n</template>\r\n\r\n<script>\r\n\timport axios from 'axios';\r\n\r\n\tlet getAjaxData = () => {\r\n\r\n\t\treturn new Promise(resolve => {\r\n\r\n\t\t\taxios.post('接口路径', {\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.then(response => {\r\n\t\t\t\t\tresolve(response.data);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(error) {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\r\n\t\t});\r\n\r\n\t}\r\n\r\n\texport default {\r\n\t\tcomponents: { //组件模板\r\n\t\t},\r\n\t\tprops: { //组件道具（参数）\r\n\t\t\t/* ****属性用法*****\r\n\t\t\t * \r\n\t\t\t * 传递类型 type: Array | Number | String | Object\r\n\t\t\t * 为必传 required: true\r\n\t\t\t * 默认值 default: ''\r\n\t\t\t * \r\n\t\t\t */\r\n\t\t},\r\n\t\tdata() { //数据\r\n\t\t\treturn {\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: { //方法\r\n\r\n\t\t},\r\n\t\tcomputed: { //计算属性\r\n\r\n\t\t\tmenuitemClasses() {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t'menu-item',\r\n\t\t\t\t\tthis.isCollapsed ? 'collapsed-menu' : ''\r\n\t\t\t\t]\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\twatch: { //监测数据变化\r\n\r\n\t\t},\r\n\r\n\t\t//===================组件钩子===========================\r\n\r\n\t\tcreated() { //实例被创建完毕之后执行\r\n\r\n\t\t},\r\n\t\tmounted() { //模板被渲染完毕之后执行\r\n\r\n\t\t},\r\n\r\n\t\t//=================组件路由勾子==============================\r\n\r\n\t\tbeforeRouteEnter(to, from, next) { //在组件创建之前调用（放置页面加载时请求的Ajax）\r\n\r\n\t\t\t(async() => { //执行异步函数\r\n\r\n\t\t\t\t//async、await错误处理\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * \r\n\t\t\t\t\t * ------串行执行---------\r\n\t\t\t\t\t * console.log(await getAjaxData());\r\n\t\t\t\t\t * ...\r\n\t\t\t\t\t * \r\n\t\t\t\t\t * ---------并行：将多个promise直接发起请求（先执行async所在函数），然后再进行await操作。（执行效率高、快）----------\r\n\t\t\t\t\t * let abc = getAjaxData();//先执行promise函数\r\n\t\t\t\t\t * ...\r\n\t\t\t\t\t * console.log(await abc);\r\n\t\t\t\t\t * ...\r\n\t\t\t\t\t */\r\n\r\n\t\t\t\t} catch(err) {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\r\n\t\t\t})();\r\n\r\n\t\t\tnext(vm => {\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t}\r\n</script>"],"sourceRoot":"src\\views\\main\\menu"}]}