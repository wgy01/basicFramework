{"remainingRequest":"E:\\GitHub\\basicFramework\\node_modules\\babel-loader\\lib\\index.js!E:\\GitHub\\basicFramework\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\GitHub\\basicFramework\\src\\views\\main\\header\\tag-module.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\GitHub\\basicFramework\\src\\views\\main\\header\\tag-module.vue","mtime":1538184519613},{"path":"E:\\GitHub\\basicFramework\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534822204654},{"path":"E:\\GitHub\\basicFramework\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"E:\\GitHub\\basicFramework\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { objEqual } from '@/toolBox';\nexport default {\n  name: 'tagModule',\n  components: {//组件模板\n  },\n  props: {\n    //组件道具（参数）\n    tagList: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    //数据\n    return {\n      offsetNum: 0 //偏移量\n\n    };\n  },\n  methods: {\n    //方法\n    tagClose: function tagClose(current) {\n      var _this = this;\n\n      //关闭当前标签\n      var currentTag = current;\n      var tagList = this.$store.state.app.tagNavList;\n      tagList.forEach(function (item, index, rawArr) {\n        if (item.name === currentTag.name) {\n          rawArr.splice(index, 1);\n\n          if (item.name === _this.$route.name) {\n            if (rawArr[index]) {\n              _this.$router.push({\n                name: rawArr[index].name\n              });\n            } else {\n              _this.$router.push({\n                name: rawArr[index - 1].name\n              });\n            }\n          }\n        }\n      });\n      this.$store.commit('setTagNavList', tagList);\n      this.setTagOffset(); //设置标签偏移量\n    },\n    tagClick: function tagClick(current) {\n      //点击当前标签\n      this.$router.push({\n        name: current.name\n      });\n    },\n    handleClose: function handleClose(name) {\n      var _this2 = this;\n\n      //标签管理按钮\n      var newTag = function newTag() {\n        var tagList = _this2.$store.state.app.tagNavList;\n        var homeRoute = _this2.$store.state.app.homeRoute;\n        var res = [];\n\n        if (name === 'other') {\n          res = tagList.filter(function (item) {\n            if (item.name === homeRoute.name || item.name === _this2.$route.name) return item;\n          });\n          return res;\n        } else if (name === 'all') {\n          res = tagList.filter(function (item) {\n            if (item.name === homeRoute.name) return item;\n          });\n\n          _this2.$router.push({\n            name: homeRoute.name\n          });\n\n          return res;\n        }\n      };\n\n      this.$store.commit('setTagNavList', newTag());\n      this.setTagOffset(); //设置标签偏移量\n    },\n    setTagOffset: function setTagOffset() {\n      var _this3 = this;\n\n      //设置标签偏移量\n      setTimeout(function () {\n        var mainBoxWidth = _this3.$refs.tagContentBox.offsetWidth; //主盒子的宽度\n\n        var currentTagLeft = 0; //从左侧到当前标签末端的总长度\n\n        _this3.$refs.tagInstance.forEach(function (item) {\n          if (item.name == _this3.$route.name) {\n            currentTagLeft = item.$el.offsetLeft + item.$el.offsetWidth + 4;\n          }\n        });\n\n        if (currentTagLeft > mainBoxWidth) {\n          _this3.offsetNum = -(currentTagLeft - mainBoxWidth);\n        } else {\n          _this3.offsetNum = 0;\n        }\n      }, 10);\n    },\n    leftBtn: function leftBtn() {\n      //向左滑动\n      this.offsetNum += 200;\n\n      if (this.offsetNum >= 0) {\n        this.offsetNum = 0;\n      }\n    },\n    rightBtn: function rightBtn() {\n      var _this4 = this;\n\n      //向右滑动\n      setTimeout(function () {\n        var tagContentBox = _this4.$refs.tagContentBox.offsetWidth;\n        var tagContentTagBtnBox = _this4.$refs.tagContentTagBtnBox.offsetWidth;\n\n        if (tagContentTagBtnBox > tagContentBox) {\n          var maxOffset = -(tagContentTagBtnBox - tagContentBox);\n          _this4.offsetNum -= 200;\n\n          if (_this4.offsetNum <= maxOffset) {\n            _this4.offsetNum = maxOffset;\n          }\n        }\n      }, 10);\n    }\n  },\n  computed: {//计算属性\n  },\n  watch: {\n    //监测数据变化\n    '$route': function $route(to) {\n      this.setTagOffset(); //设置标签偏移量\n    }\n  },\n  //===================组件钩子===========================\n  created: function created() {\n    //实例被创建完毕之后执行\n    this.setTagOffset(); //设置标签偏移量\n  },\n  mounted: function mounted() {//模板被渲染完毕之后执行\n  }\n};",{"version":3,"sources":["tag-module.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA,SAAA,QAAA,QAAA,WAAA;AAEA,eAAA;AACA,QAAA,WADA;AAEA,cAAA,CAAA;AAAA,GAFA;AAKA,SAAA;AAAA;AAEA,aAAA;AACA,YAAA,KADA;AAEA,eAAA;AAAA,eAAA,EAAA;AAAA;AAFA;AAFA,GALA;AAaA,MAbA,kBAaA;AAAA;AACA,WAAA;AAEA,iBAAA,CAFA,CAEA;;AAFA,KAAA;AAKA,GAnBA;AAoBA,WAAA;AAAA;AAEA,YAFA,oBAEA,OAFA,EAEA;AAAA;;AAAA;AAEA,UAAA,aAAA,OAAA;AAEA,UAAA,UAAA,KAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,UAAA;AAEA,cAAA,OAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA,MAAA,EAAA;AAEA,YAAA,KAAA,IAAA,KAAA,WAAA,IAAA,EAAA;AAEA,iBAAA,MAAA,CAAA,KAAA,EAAA,CAAA;;AAEA,cAAA,KAAA,IAAA,KAAA,MAAA,MAAA,CAAA,IAAA,EAAA;AAEA,gBAAA,OAAA,KAAA,CAAA,EAAA;AAEA,oBAAA,OAAA,CAAA,IAAA,CAAA;AACA,sBAAA,OAAA,KAAA,EAAA;AADA,eAAA;AAIA,aANA,MAMA;AAEA,oBAAA,OAAA,CAAA,IAAA,CAAA;AACA,sBAAA,OAAA,QAAA,CAAA,EAAA;AADA,eAAA;AAIA;AAEA;AAEA;AAEA,OA1BA;AA4BA,WAAA,MAAA,CAAA,MAAA,CAAA,eAAA,EAAA,OAAA;AAEA,WAAA,YAAA,GApCA,CAoCA;AAEA,KAxCA;AA0CA,YA1CA,oBA0CA,OA1CA,EA0CA;AAAA;AAEA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,cAAA,QAAA;AADA,OAAA;AAIA,KAhDA;AAkDA,eAlDA,uBAkDA,IAlDA,EAkDA;AAAA;;AAAA;AAEA,UAAA,SAAA,SAAA,MAAA,GAAA;AAEA,YAAA,UAAA,OAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,UAAA;AAEA,YAAA,YAAA,OAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,SAAA;AAEA,YAAA,MAAA,EAAA;;AAEA,YAAA,SAAA,OAAA,EAAA;AAEA,gBAAA,QAAA,MAAA,CAAA,gBAAA;AACA,gBAAA,KAAA,IAAA,KAAA,UAAA,IAAA,IAAA,KAAA,IAAA,KAAA,OAAA,MAAA,CAAA,IAAA,EAAA,OAAA,IAAA;AACA,WAFA,CAAA;AAIA,iBAAA,GAAA;AAEA,SARA,MAQA,IAAA,SAAA,KAAA,EAAA;AAEA,gBAAA,QAAA,MAAA,CAAA,gBAAA;AACA,gBAAA,KAAA,IAAA,KAAA,UAAA,IAAA,EAAA,OAAA,IAAA;AACA,WAFA,CAAA;;AAIA,iBAAA,OAAA,CAAA,IAAA,CAAA;AACA,kBAAA,UAAA;AADA,WAAA;;AAIA,iBAAA,GAAA;AAEA;AAEA,OA9BA;;AAgCA,WAAA,MAAA,CAAA,MAAA,CAAA,eAAA,EAAA,QAAA;AAEA,WAAA,YAAA,GApCA,CAoCA;AAEA,KAxFA;AA0FA,gBA1FA,0BA0FA;AAAA;;AAAA;AAEA,iBAAA,YAAA;AAEA,YAAA,eAAA,OAAA,KAAA,CAAA,aAAA,CAAA,WAAA,CAFA,CAEA;;AAEA,YAAA,iBAAA,CAAA,CAJA,CAIA;;AAEA,eAAA,KAAA,CAAA,WAAA,CAAA,OAAA,CAAA,gBAAA;AACA,cAAA,KAAA,IAAA,IAAA,OAAA,MAAA,CAAA,IAAA,EAAA;AACA,6BAAA,KAAA,GAAA,CAAA,UAAA,GAAA,KAAA,GAAA,CAAA,WAAA,GAAA,CAAA;AACA;AACA,SAJA;;AAMA,YAAA,iBAAA,YAAA,EAAA;AAEA,iBAAA,SAAA,GAAA,EAAA,iBAAA,YAAA,CAAA;AAEA,SAJA,MAIA;AAEA,iBAAA,SAAA,GAAA,CAAA;AAEA;AAEA,OAtBA,EAsBA,EAtBA;AAwBA,KApHA;AAsHA,WAtHA,qBAsHA;AAAA;AAEA,WAAA,SAAA,IAAA,GAAA;;AAEA,UAAA,KAAA,SAAA,IAAA,CAAA,EAAA;AACA,aAAA,SAAA,GAAA,CAAA;AACA;AAEA,KA9HA;AAgIA,YAhIA,sBAgIA;AAAA;;AAAA;AAEA,iBAAA,YAAA;AAEA,YAAA,gBAAA,OAAA,KAAA,CAAA,aAAA,CAAA,WAAA;AAEA,YAAA,sBAAA,OAAA,KAAA,CAAA,mBAAA,CAAA,WAAA;;AAEA,YAAA,sBAAA,aAAA,EAAA;AAEA,cAAA,YAAA,EAAA,sBAAA,aAAA,CAAA;AAEA,iBAAA,SAAA,IAAA,GAAA;;AAEA,cAAA,OAAA,SAAA,IAAA,SAAA,EAAA;AACA,mBAAA,SAAA,GAAA,SAAA;AACA;AAEA;AAEA,OAlBA,EAkBA,EAlBA;AAoBA;AAtJA,GApBA;AA6KA,YAAA,CAAA;AAAA,GA7KA;AAgLA,SAAA;AAAA;AAEA,YAFA,kBAEA,EAFA,EAEA;AAEA,WAAA,YAAA,GAFA,CAEA;AAEA;AANA,GAhLA;AA0LA;AAEA,SA5LA,qBA4LA;AAAA;AAEA,SAAA,YAAA,GAFA,CAEA;AAEA,GAhMA;AAiMA,SAjMA,qBAiMA,CAAA;AAEA;AAnMA,CAAA","sourcesContent":["<style scoped lang=\"less\">\r\n\t.tag-box{\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tbackground: #ebebeb;\r\n\t\theight: 38px;\r\n\t\tline-height: 38px;\r\n\t\t.btnPublicStyle(){\r\n\t\t\tflex-shrink: 0;\r\n\t\t\theight: 37px;\r\n\t\t\twidth: 26px;\r\n\t\t\tbackground: #fff;\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\t\t}\r\n\t\t.tag-left-btn{\r\n\t\t\t.btnPublicStyle();\r\n\t\t}\r\n\t\t.tag-right-btn{\r\n\t\t\t.btnPublicStyle();\r\n\t\t}\r\n\t\t.tag-manage{\r\n\t\t\tflex-shrink: 0;\r\n\t\t\theight: 37px;\r\n\t\t\twidth: 34px;\r\n\t\t\tbackground: #fff;\r\n\t\t\tmargin-left: 1px;\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\t\t}\r\n\t\t.tag-content-box{\r\n\t\t\twidth: 100%;\r\n\t\t\toverflow: hidden;\r\n\t\t\t.tag-content-tagBtn-box{\r\n\t\t\t\twhite-space:nowrap;\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t\tpadding-left: 4px;\r\n\t\t\t\ttransition: transform .3s;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.tag-manage-dropdown{\r\n\t\t\tdisplay: flex;\r\n\t\t\t.tag-manage-dropdown-btn{\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</style>\r\n\r\n<style lang=\"less\">\r\n\t.tag-manage-dropdown{\r\n\t\t.ivu-select-dropdown{\r\n\t\t\tmargin-top: 8px !important;\r\n\t\t}\r\n\t}\r\n</style>\r\n\r\n<template>\r\n\r\n\t<div class=\"tag-box\">\r\n\t\t\r\n\t\t<div class=\"tag-left-btn\">\r\n\t\t\t<Button @click=\"leftBtn\" type=\"text\" style=\"padding: 0;width: 100%;height: 28px;float: left;\">\r\n\t\t\t\t<Icon size=\"20\" type=\"ios-arrow-back\" />\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t\t\r\n\t\t<div ref=\"tagContentBox\" class=\"tag-content-box\">\r\n\t\t\t\r\n\t\t\t<div ref=\"tagContentTagBtnBox\" class=\"tag-content-tagBtn-box\" :style=\"{transform: 'translateX('+offsetNum+'px)'}\">\r\n\t\t\t\t\r\n\t\t\t\t<template v-for=\"item in tagList\">\r\n\t\t\t\t\t<Tag\r\n\t\t\t\t\tref=\"tagInstance\"\r\n\t\t\t\t\ttype=\"dot\"\r\n\t\t\t\t\t:name=\"item.name\"\r\n\t\t\t\t\t:closable=\"item.name === 'home' ? false : true\"\r\n\t\t\t\t\t:fade=\"false\"\r\n\t\t\t\t\t@on-close=\"tagClose(item)\"\r\n\t\t\t\t\t@click.native=\"tagClick(item)\"\r\n\t\t\t\t\t:color=\"$route.name === item.name ? 'primary' : 'default'\">\r\n\t\t\t\t\t\t{{item.meta.title}}\r\n\t\t\t\t\t</Tag>\r\n\t\t\t\t</template>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"tag-right-btn\">\r\n\t\t\t<Button @click=\"rightBtn\" type=\"text\" style=\"padding: 0;width: 100%;height: 28px;float: right;\">\r\n\t\t\t\t<Icon size=\"20\" type=\"ios-arrow-forward\" />\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"tag-manage\">\r\n\t\t\t<Dropdown @on-click=\"handleClose\" placement=\"bottom-end\" class=\"tag-manage-dropdown\">\r\n\t\t        <div class=\"tag-manage-dropdown-btn\">\r\n\t           \t\t<Button type=\"text\" style=\"padding: 0;width: 33px;height: 28px;\">\r\n\t\t\t\t\t\t<Icon size=\"20\" type=\"ios-close-circle-outline\" />\r\n\t\t\t\t\t</Button>\r\n\t\t        </div>\r\n\t\t        <DropdownMenu slot=\"list\">\r\n\t\t            <DropdownItem name=\"other\">关闭其他</DropdownItem>\r\n\t\t            <DropdownItem name=\"all\">关闭全部</DropdownItem>\r\n\t\t        </DropdownMenu>\r\n\t\t    </Dropdown>\r\n\t\t</div>\r\n\t\t\r\n\t</div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport { objEqual } from '@/toolBox';\r\n\r\nexport default {\r\n\tname: 'tagModule',\r\n\tcomponents: { //组件模板\r\n\t\t\r\n\t},\r\n\tprops: { //组件道具（参数）\r\n\t\t\r\n\t\ttagList: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => []\r\n\t\t},\r\n\t\t\r\n\t},\r\n\tdata() { //数据\r\n\t\treturn {\r\n\t\t\t\r\n\t\t\toffsetNum: 0,//偏移量\r\n\t\t\t\r\n\t\t}\r\n\t},\r\n\tmethods: { //方法\r\n\t\t\r\n\t\ttagClose(current){//关闭当前标签\r\n\t\t\t\r\n\t\t\tlet currentTag = current;\r\n\t\t\t\r\n\t\t\tlet tagList = this.$store.state.app.tagNavList;\r\n\t\t\t\r\n\t\t\ttagList.forEach((item,index,rawArr) => {\r\n\t\t\t\t\r\n\t\t\t\tif(item.name === currentTag.name){\r\n\t\t\t\t\t\r\n\t\t\t\t\trawArr.splice(index,1);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(item.name === this.$route.name){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(rawArr[index]){\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.$router.push({\r\n\t\t\t\t\t    \t\tname: rawArr[index].name\r\n\t\t\t\t\t    \t});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.$router.push({\r\n\t\t\t\t\t    \t\tname: rawArr[index-1].name\r\n\t\t\t\t\t    \t});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.$store.commit('setTagNavList',tagList);\r\n\t\t\t\r\n\t\t\tthis.setTagOffset();//设置标签偏移量\r\n\t\t\t\r\n\t    },\r\n\t    \r\n\t    tagClick(current){//点击当前标签\r\n\t    \t\r\n\t    \tthis.$router.push({\r\n\t    \t\tname: current.name\r\n\t    \t});\r\n\t    \t\r\n\t    },\r\n\t    \r\n\t    handleClose(name){//标签管理按钮\r\n\t    \t\r\n\t    \tlet newTag = () => {\r\n\t    \t\t\r\n\t    \t\tlet tagList = this.$store.state.app.tagNavList;\r\n\t    \t\t\r\n\t    \t\tlet homeRoute = this.$store.state.app.homeRoute;\r\n\t    \t\t\r\n\t    \t\tlet res = [];\r\n\t    \t\r\n\t    \t\tif(name === 'other'){\r\n\t    \t\t\r\n\t    \t\t\tres = tagList.filter(item => {\r\n\t    \t\t\t\tif((item.name === homeRoute.name) || (item.name === this.$route.name) ) return item\r\n\t    \t\t\t});\r\n\t    \t\t\r\n\t    \t\t\treturn res;\r\n\t    \t\t\r\n\t    \t\t}else if(name === 'all'){\r\n\t    \t\t\r\n\t    \t\t\tres = tagList.filter(item => {\r\n\t    \t\t\t\tif(item.name === homeRoute.name) return item\r\n\t    \t\t\t});\r\n\t    \t\t\t\r\n\t    \t\t\tthis.$router.push({\r\n\t\t\t    \t\tname: homeRoute.name\r\n\t\t\t    \t});\r\n\t    \t\t\t\r\n\t    \t\t\treturn res;\r\n\t    \t\t\r\n\t    \t\t}\r\n\t    \t\t\r\n\t    \t}\r\n\t    \t\r\n\t    \tthis.$store.commit('setTagNavList',newTag());\r\n\t    \t\r\n\t    \tthis.setTagOffset();//设置标签偏移量\r\n\t    \t\r\n\t    },\r\n\t    \r\n\t    setTagOffset(){//设置标签偏移量\r\n\t    \t\r\n\t    \tsetTimeout(() => {\r\n\t\t\t\t\r\n\t\t\t\tlet mainBoxWidth = this.$refs.tagContentBox.offsetWidth;//主盒子的宽度\r\n\t\t\t\t\r\n\t\t\t\tlet currentTagLeft = 0;//从左侧到当前标签末端的总长度\r\n\t\t\t\t\r\n\t\t\t\tthis.$refs.tagInstance.forEach(item => {\r\n\t\t\t\t\tif(item.name == this.$route.name){\r\n\t\t\t\t\t\tcurrentTagLeft = (item.$el.offsetLeft + item.$el.offsetWidth) + 4;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tif(currentTagLeft > mainBoxWidth){\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.offsetNum = -(currentTagLeft - mainBoxWidth);\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.offsetNum = 0;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t},10);\r\n\t    \t\r\n\t\t},\r\n\t\t\r\n\t\tleftBtn(){//向左滑动\r\n\t\t\t\r\n\t\t\tthis.offsetNum += 200;\r\n\t\t\t\r\n\t\t\tif(this.offsetNum >= 0){\r\n\t\t\t\tthis.offsetNum = 0;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\trightBtn(){//向右滑动\r\n\t\t\t\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t\r\n\t\t\t\tlet tagContentBox = this.$refs.tagContentBox.offsetWidth;\r\n\t\t\t\t\r\n\t\t\t\tlet tagContentTagBtnBox = this.$refs.tagContentTagBtnBox.offsetWidth;\r\n\t\t\t\t\r\n\t\t\t\tif(tagContentTagBtnBox > tagContentBox){\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet maxOffset = -(tagContentTagBtnBox - tagContentBox);\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.offsetNum -= 200;\r\n\t\t\t\r\n\t\t\t\t\tif(this.offsetNum <= maxOffset){\r\n\t\t\t\t\t\tthis.offsetNum = maxOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t},10);\r\n\t\t\t\r\n\t\t},\r\n\t    \r\n\t},\r\n\tcomputed: { //计算属性\r\n\t\t\r\n\t},\r\n\twatch: { //监测数据变化\r\n\t\t\r\n\t\t'$route'(to){\r\n\t\t\t\r\n\t\t\tthis.setTagOffset();//设置标签偏移量\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t},\r\n\r\n\t//===================组件钩子===========================\r\n\r\n\tcreated() { //实例被创建完毕之后执行\r\n\t\t\r\n\t\tthis.setTagOffset();//设置标签偏移量\r\n\t\t\r\n\t},\r\n\tmounted() { //模板被渲染完毕之后执行\r\n\t\t\r\n\t},\r\n\r\n}\r\n</script>"],"sourceRoot":"src\\views\\main\\header"}]}